
set(undefined_link_flags " ")
if(${CMAKE_SYSTEM_NAME} STREQUAL Darwin)
    # on osx wih conda python 3 we do not link python
    # https://github.com/shogun-toolbox/shogun/issues/4068
    # Ok having spent some time on that I finally found the culprit. I had to move some lines around in generated SWIG wrapper to realise that the true error masked by this segfault is:
    #
    # PyThreadState_Get: no current thread
    # Here is the discussion I found then: https://groups.google.com/a/continuum.io/forum/#!topic/anaconda/057P4uNWyCU
    #
    # Anaconda guys do link python statically. So we run against dynamic library 'python' and the interpreter runs against statically linked 'python'. This causes stuff like segfault and 'no current thread' as that dynamic python is not initialised.
    #
    # The solution is quite simple. In case of anaconda we should not link but add -undefined dynamic_lookup instead. Patch to come soon.


    set(PYTHON_LIBRARY_TO_LINK )
    set(undefined_link_flags "-undefined dynamic_lookup")
endif()



if(${CMAKE_SYSTEM_NAME} STREQUAL Windows)
SET(LIBS
  CC3DCompuCellLib
  #AutomatonStatic
  #BoundaryStatic
  #Field3DStatic
  #Potts3DStatic


   CC3DBasicUtils
   CC3DXMLUtils
   ${PYTHON_LIBRARIES}

)
else(${CMAKE_SYSTEM_NAME} STREQUAL Windows)
SET(LIBS
  CC3DCompuCellLib
  #AutomatonStatic
  #BoundaryStatic
  #Field3DStatic
  #Potts3DStatic

   
   CC3DBasicUtils
   CC3DXMLUtils
   
   ${PYTHON_LIBRARIES}

)


endif(${CMAKE_SYSTEM_NAME} STREQUAL Windows)



SET(LIBS_AUX
   SimpleVolumeShared
   VolumeMeanShared                    
   PyPlugin
#AutogeneratedModules - DO NOT REMOVE THIS LINE IT IS USED BY TWEDIT TO LOCATE CODE INSERTION POINT


)

SET(COMPUCELL3D_INSTALL_SWIG_MODULES_DIR "lib/site-packages/cc3d/cpp/")

MESSAGE(COMPUCELL3D_INCLUDE_PATH ${COMPUCELL3D_INCLUDE_PATH})

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}
${COMPUCELL3D_SOURCE_DIR}
${COMPUCELL3D_INCLUDE_PATH}
${COMPUCELL3D_INSTALL_PATH}/include
${COMPUCELL3D_SOURCE_DIR}/CompuCell3D
${COMPUCELL3D_SOURCE_DIR}/CompuCell3D/plugins
${COMPUCELL3D_INCLUDE_PATH}/CompuCell3D
${COMPUCELL3D_INCLUDE_PATH}/CompuCell3D/plugins
# ${COMPUCELL3D_SOURCE_DIR}/BasicUtils
# ${COMPUCELL3D_SOURCE_DIR}/XercescUtils
# ${COMPUCELL3D_SOURCE_DIR}/XMLCereal
${PYINTERFACE_SRC_DIR}/PyPlugin

)



SET_SOURCE_FILES_PROPERTIES(CompuCellExtraModules.i  PROPERTIES CPLUSPLUS ON)
SWIG_ADD_LIBRARY(CompuCellExtraModules LANGUAGE python SOURCES CompuCellExtraModules.i)
# SWIG_ADD_MODULE(CompuCellExtraModules python CompuCellExtraModules.i)


if(${CMAKE_SYSTEM_NAME} STREQUAL Windows)
  SET_TARGET_PROPERTIES(CompuCellExtraModules PROPERTIES SUFFIX ".pyd") # changes dll name to pyd sop that it is compatible with new Python standard
endif(${CMAKE_SYSTEM_NAME} STREQUAL Windows)

SWIG_LINK_LIBRARIES(CompuCellExtraModules ${LIBS} ${LIBS_AUX})
set_target_properties(CompuCellExtraModules PROPERTIES LINK_FLAGS ${undefined_link_flags})

# install_targets(/lib/python _CompuCellExtraModules)
install(TARGETS CompuCellExtraModules DESTINATION ${COMPUCELL3D_INSTALL_SWIG_MODULES_DIR} )

set(python_files_path ${CMAKE_BINARY_DIR}/pyinterface/CompuCellExtraModules)

INSTALL(FILES ${python_files_path}/CompuCellExtraModules.py
	      DESTINATION ${COMPUCELL3D_INSTALL_SWIG_MODULES_DIR})





