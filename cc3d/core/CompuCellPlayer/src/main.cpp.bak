/****************************************************************************
**
** Copyright (C) 2004-2005 Trolltech AS. All rights reserved.
**
** This file is part of the example classes of the Qt Toolkit.
**
** This file may be used under the terms of the GNU General Public
** License version 2.0 as published by the Free Software Foundation
** and appearing in the file LICENSE.GPL included in the packaging of
** this file.  Please review the following information to ensure GNU
** General Public Licensing requirements will be met:
** http://www.trolltech.com/products/qt/opensource.html
**
** If you are unsure which license is appropriate for your use, please
** review the following information:
** http://www.trolltech.com/products/qt/licensing.html or contact the
** sales department at sales@trolltech.com.
**
** This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
** WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
**
****************************************************************************/

#include <QApplication>
#include <QtGui>

#include "imagewindow.h"

int main(int argc, char *argv[])
{
    Q_INIT_RESOURCE(player);

    QApplication app(argc, argv);
    bool silent=false;
    bool commandFlag=false;
    bool usePython=false;
    QString xmlFileName;
    QString scrDesFileName;
    QString pythonScriptFileName;

    QRegExp regex_silent("^--silent");
    QRegExp regex_xml("^--xml=(.+)");
    QRegExp regex_scrDes("^--screenshotDescription=(.+)");
    QRegExp regex_pythonScript("^--pythonScript=(.+)");
    int pos;
    for(int i =0 ; i< argc ;++i){
      QString argValue(argv[i]);
      pos=regex_silent.indexIn(argValue);
      if(pos>-1){
         silent=true;
         cerr<<"silent:"<<silent<<endl;
      }

      pos=regex_xml.indexIn(argValue);
      if(pos>-1){
         if(regex_xml.numCaptures()==1)
            xmlFileName=regex_xml.cap(1);
            cerr<<"xml:"<<xmlFileName.toStdString()<<endl;
            commandFlag=true;
            continue;
      }

      pos=regex_scrDes.indexIn(argValue);
      if(pos>-1){
         if(regex_scrDes.numCaptures()==1)
            scrDesFileName=regex_scrDes.cap(1);
            cerr<<"screenshotDescription:"<<scrDesFileName.toStdString()<<endl;
            continue;
      }
      
      pos=regex_pythonScript.indexIn(argValue);
      if(pos>-1){
         if(regex_pythonScript.numCaptures()==1)
            pythonScriptFileName=regex_pythonScript.cap(1);
            cerr<<"pythonScriptFileName:"<<pythonScriptFileName.toStdString()<<endl;
            usePython=true;
            continue;
      }
            
    }
    //silent mode of operation
    if(silent){
      ImageWindow imageWin(true);
      imageWin.setXMLFile(xmlFileName);
      imageWin.setRunPythonFlag(false);
      if(usePython)
         imageWin.setPythonScript(pythonScriptFileName);

//       app.setMainWidget(&imageWin);

      if(!scrDesFileName.isEmpty())
         imageWin.setScreenshotDescriptionFileName(scrDesFileName);
               
      imageWin.startSimulation();
      
      return app.exec();
    }

    //command line operation with gui
    if(!silent && commandFlag){
      ImageWindow imageWin;
      imageWin.resize(800, 500);
      imageWin.setXMLFile(xmlFileName);
      imageWin.setRunPythonFlag(false);

      if(usePython)
         imageWin.setPythonScript(pythonScriptFileName);

      imageWin.show();
      imageWin.startSimulation();
      
      return app.exec();
    }


    ImageWindow imageWin;
//     app.setMainWidget(&imageWin);
    imageWin.resize(800, 500);
    imageWin.show();
    return app.exec();

//     QApplication app(argc, argv);
//     ImageWindow imageWin;
//     imageWin.resize(800, 500);
//     imageWin.show();
//     return app.exec();
}
